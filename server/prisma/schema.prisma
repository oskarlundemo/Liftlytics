// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String             @id @default(uuid())
  email     String             @unique
  exercises StrengthExercise[]
  workouts  Workout[]
}

model Workout {
  id         String            @id @default(uuid())
  startTime  DateTime?
  endTime    DateTime?
  notes      String?
  bodyWeight Float?
  exercises  WorkoutExercise[]
  User       User[]
}

model WorkoutExercise {
  id         String @id @default(uuid())
  workoutId  String
  exerciseId String

  workout  Workout          @relation(fields: [workoutId], references: [id])
  exercise StrengthExercise @relation(fields: [exerciseId], references: [id])

  metrics ExerciseMetric[]
}

model ExerciseMetric {
  id                String          @id @default(uuid())
  workoutExerciseId String
  workoutExercise   WorkoutExercise @relation(fields: [workoutExerciseId], references: [id])

  metricType MetricType
  sets       Int?
  reps       Int?
  time       Float?
}

enum MetricType {
  WEIGHT_REPS
  WEIGHT_TIME
  BODYWEIGHT_TIME
  REPS
}

model StrengthExercise {
  id        String  @id @default(uuid())
  name      String
  category  String?
  isDefault Boolean @default(false)
  userId    String?

  user         User?                 @relation(fields: [userId], references: [id])
  workouts     WorkoutExercise[]
  muscleGroups ExerciseMuscleGroup[]
}

model MuscleGroup {
  id        String                @id @default(uuid())
  name      String
  exercises ExerciseMuscleGroup[]
}

model ExerciseMuscleGroup {
  id            String @id @default(uuid())
  exerciseId    String
  muscleGroupId String

  exercise    StrengthExercise @relation(fields: [exerciseId], references: [id])
  muscleGroup MuscleGroup      @relation(fields: [muscleGroupId], references: [id])
}
